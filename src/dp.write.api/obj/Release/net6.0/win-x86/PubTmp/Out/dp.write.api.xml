<?xml version="1.0"?>
<doc>
    <assembly>
        <name>dp.write.api</name>
    </assembly>
    <members>
        <member name="T:dp.write.api.Attributes.ValidateModelStateAttribute">
            <summary>
            Model state validation attribute
            </summary>
        </member>
        <member name="M:dp.write.api.Attributes.ValidateModelStateAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before the action method is invoked
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:dp.write.api.Controllers.AccountsApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:dp.write.api.Controllers.AccountsApiController.SendTransaction(dp.write.transaction.Models.InlineObject)">
            <summary>
            Send Transaction
            </summary>
            <param name="inlineObject"></param>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="429">Client Error</response>
            <response code="503">Server Error</response>
        </member>
        <member name="T:dp.write.api.Filters.BasePathFilter">
            <summary>
            BasePath Document Filter sets BasePath property of Swagger and removes it from the individual URL paths
            </summary>
        </member>
        <member name="M:dp.write.api.Filters.BasePathFilter.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="basePath">BasePath to remove from Operations</param>
        </member>
        <member name="P:dp.write.api.Filters.BasePathFilter.BasePath">
            <summary>
            Gets the BasePath of the Swagger Doc
            </summary>
            <returns>The BasePath of the Swagger Doc</returns>
        </member>
        <member name="M:dp.write.api.Filters.BasePathFilter.Apply(Microsoft.OpenApi.Models.OpenApiDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            Apply the filter
            </summary>
            <param name="swaggerDoc">OpenApiDocument</param>
            <param name="context">FilterContext</param>
        </member>
        <member name="T:dp.write.api.Filters.GeneratePathParamsValidationFilter">
            <summary>
            Path Parameter Validation Rules Filter
            </summary>
        </member>
        <member name="M:dp.write.api.Filters.GeneratePathParamsValidationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Constructor
            </summary>
            <param name="operation">Operation</param>
            <param name="context">OperationFilterContext</param>
        </member>
        <member name="T:dp.write.api.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:dp.write.api.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:dp.write.api.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Create the web host builder.
            </summary>
            <param name="args"></param>
            <returns>IWebHostBuilder</returns>
        </member>
        <member name="T:dp.write.api.Security.ApiKeyAuthenticationHandler">
            <summary>
            class to handle api_key security.
            </summary>
        </member>
        <member name="F:dp.write.api.Security.ApiKeyAuthenticationHandler.SchemeName">
            <summary>
            scheme name for authentication handler.
            </summary>
        </member>
        <member name="M:dp.write.api.Security.ApiKeyAuthenticationHandler.HandleAuthenticateAsync">
            <summary>
            verify that require api key header exist and handle authorization.
            </summary>
        </member>
        <member name="T:dp.write.api.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:dp.write.api.Startup.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="env"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:dp.write.api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
    </members>
</doc>
